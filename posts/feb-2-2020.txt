# Designing Noted

The first question is whether I should even create Noted. There are many great productivity tools available from Google Calendar to Todoist. And making Noted will be no easy task. It will be a very, very big task, and unless I have adequate motivation to actually *make* Noted, it is likely I will not be super duper productive in the making of Noted and that I will quit prematurely. Such a big task would require my focused attention, which could be used more meaningfully in other areas of life such as school. In addition, it would probably be *months* before Noted  can be usable at all. And even at that point, it wouldn't function on most machines, even machine running Windows (due to a lack of testing). I've seen this happen with my last project, Terranium, which is officially dead. As for APONG, the code is really messy and the game really janky, i.e., buggy (and not all that fun to play either).

But _if_ I want to pursue making Noted, at the very least, I need a clear vision and a plan to get there. This is exactly why I decided to make this document, to try to develop a design document for some piece of good software. I also want to express some problems I foresee in Noted, such as how to address the "buginess" problem or what operating systems I want to support with Noted (whether its just going to be Windows). Before we talk about these problems which I foresee and the potential solutions for them, let's start with a idealistic vision of what Noted can be.

This is where I'm stuck. Do we just make essentially an offline version of Google Calendar? That would be kind of nice, I suppose. But we would not be able to implement cloud sync. And I _do_ use cloud sync. I sometimes add things to my Google Calendar from home and sometimes from a Google Chromebook. While there's no way I can implement cloud sync, I could design it so that calendars are stored as simple plain text format perhaps if I really wanted to so that it could even be edited on a Chromebook via USB (hopefully?).

There's another aspect of Noted that I've been thinking about: Noted Paper. Basically it's like the way I sometimes use real-life paper to note things but done digitally. You can write things on a digital sheet of paper. Perhaps you can have one titled "Books to Read" or "Funny YouTube videos" or "Endocrine System Notes" or "A Rant on Teachers." You can put related sheets of paper into a _stack_. For example, "Endocrine System Notes" and "Metabolism" can both be in the stack "Biology Notes." To eliminate complexity both for the user and for the programmer, I don't want to have nested stacks like the file system in an OS, stacks can only be one-level deep. Just for fun you can assign a color to each stack. Related to this is something like a Daily Sheet, for when you want to note something down, say a realization that having no internet is bliss or something, without having to think about where to note it down.

For some reason, I am more drawn to making Noted Paper, but I worry that an offline calendar would actually be more useful for productivity. You could plan your days out and stuff visually. While you can use Daily Sheet for planning out your day, Noted Calendar is made more for that kind of stuff.

One other idea, perhaps an extension to Daily Sheet, is a more streamlined way to schedule your day. The program gives you TODO-list style input where pressing enter will create a new item after the current item and pressing shift-enter will create a new item before the current item. You can reorder the items by dragging and dropping with your mouse. Using the arrow keys up and down works just the same as in a regular text editor: it will move to the next and previous visual line respectively; however, the current item will be highlighted by a coloured bordering box. The major innovation, if you would call it that, is that pressing tab would switch you into time mode where you can enter the time that you plan to do this in the day. This can be "Morning" or "After school" or a time like "9:15 pm." Timed items will be automatically bunched together at the bottom and ordered chronologically. The following would require even more work but perhaps we could have a traditional calendar display of this information and accept input into this from the calendar too. 